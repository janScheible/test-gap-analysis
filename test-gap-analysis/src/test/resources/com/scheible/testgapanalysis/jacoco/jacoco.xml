<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd">
<report name="com.scheible::test-gap-analysis library">
	<sessioninfo id="Session-7e318d67" start="1641296263260" dump="1641296272652"/>
	<package name="com/scheible/testgapanalysis/_test">
		<class name="com/scheible/testgapanalysis/_test/CoverageTestClass" sourcefilename="CoverageTestClass.java">
			<method name="&lt;init&gt;" desc="()V" line="26">
				<counter type="INSTRUCTION" missed="15" covered="0"/>
				<counter type="LINE" missed="6" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<method name="&lt;init&gt;" desc="(Ljava/lang/String;Lcom/scheible/testgapanalysis/_test/CoverageTestClass$InnerStatic;)V" line="26">
				<counter type="INSTRUCTION" missed="15" covered="0"/>
				<counter type="LINE" missed="6" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<method name="doIt" desc="()V" line="48">
				<counter type="INSTRUCTION" missed="4" covered="0"/>
				<counter type="LINE" missed="2" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<method name="doItLambda" desc="()V" line="52">
				<counter type="INSTRUCTION" missed="7" covered="0"/>
				<counter type="LINE" missed="3" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<method name="execute" desc="(Ljava/util/function/Supplier;Ljava/util/function/Consumer;)V" line="58">
				<counter type="INSTRUCTION" missed="6" covered="0"/>
				<counter type="LINE" missed="2" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<method name="doItRunanble" desc="()V" line="65">
				<counter type="INSTRUCTION" missed="15" covered="0"/>
				<counter type="LINE" missed="5" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<method name="doItMultipleLamdaSingleLine" desc="()V" line="83">
				<counter type="INSTRUCTION" missed="5" covered="0"/>
				<counter type="LINE" missed="2" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<method name="doItMultipleLamdaSingleLineMultiLine" desc="()V" line="87">
				<counter type="INSTRUCTION" missed="5" covered="0"/>
				<counter type="LINE" missed="2" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<method name="staticMethod" desc="()Ljava/lang/String;" line="95">
				<counter type="INSTRUCTION" missed="2" covered="0"/>
				<counter type="LINE" missed="1" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<method name="lambda$doItMultipleLamdaSingleLineMultiLine$5" desc="(Ljava/lang/String;)V" line="89">
				<counter type="INSTRUCTION" missed="4" covered="0"/>
				<counter type="LINE" missed="1" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<method name="lambda$doItMultipleLamdaSingleLineMultiLine$4" desc="()Ljava/lang/String;" line="88">
				<counter type="INSTRUCTION" missed="2" covered="0"/>
				<counter type="LINE" missed="1" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<method name="lambda$doItMultipleLamdaSingleLine$3" desc="(Ljava/lang/String;)V" line="83">
				<counter type="INSTRUCTION" missed="4" covered="0"/>
				<counter type="LINE" missed="1" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<method name="lambda$doItMultipleLamdaSingleLine$2" desc="()Ljava/lang/String;" line="83">
				<counter type="INSTRUCTION" missed="2" covered="0"/>
				<counter type="LINE" missed="1" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<method name="lambda$doItLambda$1" desc="(Ljava/lang/String;)Z" line="52">
				<counter type="INSTRUCTION" missed="3" covered="0"/>
				<counter type="LINE" missed="1" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<method name="lambda$static$0" desc="(Ljava/lang/String;)Ljava/lang/Integer;" line="30">
				<counter type="INSTRUCTION" missed="4" covered="0"/>
				<counter type="LINE" missed="1" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<method name="&lt;clinit&gt;" desc="()V" line="22">
				<counter type="INSTRUCTION" missed="6" covered="0"/>
				<counter type="LINE" missed="2" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<counter type="INSTRUCTION" missed="99" covered="0"/>
			<counter type="LINE" missed="31" covered="0"/>
			<counter type="COMPLEXITY" missed="16" covered="0"/>
			<counter type="METHOD" missed="16" covered="0"/>
			<counter type="CLASS" missed="1" covered="0"/>
		</class>
		<class name="com/scheible/testgapanalysis/_test/CoverageTestClass$InnerStatic" sourcefilename="CoverageTestClass.java">
			<method name="&lt;init&gt;" desc="()V" line="17">
				<counter type="INSTRUCTION" missed="3" covered="0"/>
				<counter type="LINE" missed="1" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<counter type="INSTRUCTION" missed="3" covered="0"/>
			<counter type="LINE" missed="1" covered="0"/>
			<counter type="COMPLEXITY" missed="1" covered="0"/>
			<counter type="METHOD" missed="1" covered="0"/>
			<counter type="CLASS" missed="1" covered="0"/>
		</class>
		<class name="com/scheible/testgapanalysis/_test/CoverageTestClass$1" sourcefilename="CoverageTestClass.java">
			<method name="&lt;init&gt;" desc="(Lcom/scheible/testgapanalysis/_test/CoverageTestClass;)V" line="67">
				<counter type="INSTRUCTION" missed="6" covered="0"/>
				<counter type="LINE" missed="1" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<method name="run" desc="()V" line="70">
				<counter type="INSTRUCTION" missed="10" covered="0"/>
				<counter type="LINE" missed="4" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<method name="lambda$run$0" desc="(Ljava/lang/String;)Ljava/lang/String;" line="70">
				<counter type="INSTRUCTION" missed="2" covered="0"/>
				<counter type="LINE" missed="1" covered="0"/>
				<counter type="COMPLEXITY" missed="1" covered="0"/>
				<counter type="METHOD" missed="1" covered="0"/>
			</method>
			<counter type="INSTRUCTION" missed="18" covered="0"/>
			<counter type="LINE" missed="5" covered="0"/>
			<counter type="COMPLEXITY" missed="3" covered="0"/>
			<counter type="METHOD" missed="3" covered="0"/>
			<counter type="CLASS" missed="1" covered="0"/>
		</class>
		<sourcefile name="CoverageTestClass.java">
			<line nr="17" mi="3" ci="0" mb="0" cb="0"/>
			<line nr="22" mi="3" ci="0" mb="0" cb="0"/>
			<line nr="26" mi="6" ci="0" mb="0" cb="0"/>
			<line nr="27" mi="6" ci="0" mb="0" cb="0"/>
			<line nr="30" mi="7" ci="0" mb="0" cb="0"/>
			<line nr="36" mi="2" ci="0" mb="0" cb="0"/>
			<line nr="38" mi="3" ci="0" mb="0" cb="0"/>
			<line nr="39" mi="3" ci="0" mb="0" cb="0"/>
			<line nr="40" mi="1" ci="0" mb="0" cb="0"/>
			<line nr="42" mi="2" ci="0" mb="0" cb="0"/>
			<line nr="43" mi="3" ci="0" mb="0" cb="0"/>
			<line nr="44" mi="3" ci="0" mb="0" cb="0"/>
			<line nr="45" mi="1" ci="0" mb="0" cb="0"/>
			<line nr="48" mi="3" ci="0" mb="0" cb="0"/>
			<line nr="49" mi="1" ci="0" mb="0" cb="0"/>
			<line nr="52" mi="5" ci="0" mb="0" cb="0"/>
			<line nr="53" mi="4" ci="0" mb="0" cb="0"/>
			<line nr="54" mi="1" ci="0" mb="0" cb="0"/>
			<line nr="58" mi="5" ci="0" mb="0" cb="0"/>
			<line nr="59" mi="1" ci="0" mb="0" cb="0"/>
			<line nr="65" mi="3" ci="0" mb="0" cb="0"/>
			<line nr="67" mi="13" ci="0" mb="0" cb="0"/>
			<line nr="70" mi="4" ci="0" mb="0" cb="0"/>
			<line nr="71" mi="4" ci="0" mb="0" cb="0"/>
			<line nr="75" mi="3" ci="0" mb="0" cb="0"/>
			<line nr="76" mi="1" ci="0" mb="0" cb="0"/>
			<line nr="77" mi="1" ci="0" mb="0" cb="0"/>
			<line nr="78" mi="3" ci="0" mb="0" cb="0"/>
			<line nr="79" mi="1" ci="0" mb="0" cb="0"/>
			<line nr="83" mi="10" ci="0" mb="0" cb="0"/>
			<line nr="84" mi="1" ci="0" mb="0" cb="0"/>
			<line nr="87" mi="4" ci="0" mb="0" cb="0"/>
			<line nr="88" mi="2" ci="0" mb="0" cb="0"/>
			<line nr="89" mi="4" ci="0" mb="0" cb="0"/>
			<line nr="90" mi="1" ci="0" mb="0" cb="0"/>
			<line nr="95" mi="2" ci="0" mb="0" cb="0"/>
			<counter type="INSTRUCTION" missed="120" covered="0"/>
			<counter type="LINE" missed="36" covered="0"/>
			<counter type="COMPLEXITY" missed="20" covered="0"/>
			<counter type="METHOD" missed="20" covered="0"/>
			<counter type="CLASS" missed="3" covered="0"/>
		</sourcefile>
		<counter type="INSTRUCTION" missed="120" covered="0"/>
		<counter type="LINE" missed="36" covered="0"/>
		<counter type="COMPLEXITY" missed="20" covered="0"/>
		<counter type="METHOD" missed="20" covered="0"/>
		<counter type="CLASS" missed="3" covered="0"/>
	</package>
	<counter type="INSTRUCTION" missed="809" covered="1742"/>
	<counter type="BRANCH" missed="104" covered="94"/>
	<counter type="LINE" missed="180" covered="305"/>
	<counter type="COMPLEXITY" missed="127" covered="120"/>
	<counter type="METHOD" missed="61" covered="87"/>
	<counter type="CLASS" missed="6" covered="13"/>
</report>
